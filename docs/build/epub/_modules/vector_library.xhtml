<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>vector_library</title>
    <link rel="stylesheet" href="../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for vector_library</h1><div class="highlight"><pre>
<span></span>
<div class="viewcode-block" id="Vector2D"><a class="viewcode-back" href="../module.xhtml#vector_library.Vector2D">[docs]</a><span class="k">class</span> <span class="nc">Vector2D</span><span class="p">:</span>
	<span class="sd">&#39;&#39;&#39; </span>
<span class="sd">	This class responsible for handle the 2D vectors operations</span>
<span class="sd">	&#39;&#39;&#39;</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39;</span>
<span class="sd">		2D Vector inititor</span>
<span class="sd">		   Args:</span>
<span class="sd">				x: Vector x value</span>
<span class="sd">				y: Vector y value</span>
<span class="sd">		&#39;&#39;&#39;</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>

	<span class="k">def</span> <span class="nf">__add__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; </span>
<span class="sd">		This function responsible for handle the 2D addition operation</span>
<span class="sd">				Args:</span>
<span class="sd">					self: Vector that particular instance</span>
<span class="sd">					other_vector: Other Vector</span>

<span class="sd">				Returns:</span>
<span class="sd">					vector1+vector2</span>
<span class="sd">		&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="n">Vector2D</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">+</span><span class="n">other_vector</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="o">+</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__sub__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; </span>
<span class="sd">		This function responsible for handle the 2D substraction operation</span>
<span class="sd">				Args:</span>
<span class="sd">					self: Vector that particular instance</span>
<span class="sd">					other_vector: Other Vector</span>
<span class="sd">				Returns:</span>
<span class="sd">					vector1-vector2</span>
<span class="sd">		&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="n">Vector2D</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">-</span><span class="n">other_vector</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="o">-</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__mul__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; </span>
<span class="sd">		This function responsible for handle the 2D dot product operation</span>
<span class="sd">			Args:</span>
<span class="sd">				self: Vector that particular instance</span>
<span class="sd">				other_vector: Other Vector</span>
<span class="sd">			Returns:</span>
<span class="sd">				vector1*vector2</span>
<span class="sd">		&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">*</span><span class="n">other_vector</span><span class="o">.</span><span class="n">x</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="o">*</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span>

	<span class="k">def</span> <span class="nf">__matmul__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; This function responsible for handle the 2D cross product operation</span>
<span class="sd">			Args:</span>
<span class="sd">				self: Vector that particular instance</span>
<span class="sd">				other_vector: Other Vector</span>
<span class="sd">			Returns: </span>
<span class="sd">				vector1 X vector2				</span>
<span class="sd">		&#39;&#39;&#39;</span>
		
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">*</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span> <span class="o">-</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">x</span><span class="o">*</span><span class="bp">self</span><span class="o">.</span><span class="n">y</span>

	<span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="k">return</span> <span class="n">f</span><span class="s2">&quot;&lt;</span><span class="si">{self.x}</span><span class="s2">, </span><span class="si">{self.y}</span><span class="s2">&gt;&quot;</span></div>

<div class="viewcode-block" id="Vector3D"><a class="viewcode-back" href="../module.xhtml#vector_library.Vector3D">[docs]</a><span class="k">class</span> <span class="nc">Vector3D</span><span class="p">:</span>
	<span class="sd">&#39;&#39;&#39; </span>
<span class="sd">	This class responsible for handle the 3D vectors operations</span>
<span class="sd">	&#39;&#39;&#39;</span>
	<span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39;</span>
<span class="sd">		3D vector initiator</span>
<span class="sd">			Args:</span>
<span class="sd">				x: Vector x value</span>
<span class="sd">				y: Vector y value</span>
<span class="sd">				z: Vector z value</span>
<span class="sd">		&#39;&#39;&#39;</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span>
		<span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">=</span> <span class="n">z</span>

	<span class="k">def</span> <span class="nf">__add__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; This function responsible for handle the 3D addition operation&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="n">Vector3D</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">+</span><span class="n">other_vector</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="o">+</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span><span class="p">,</span>  <span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">+</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">z</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__sub__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; This function responsible for handle the 3D substraction operation&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="n">Vector3D</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">x</span><span class="o">-</span><span class="n">other_vector</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span><span class="o">-</span><span class="n">other_vector</span><span class="o">.</span><span class="n">y</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">-</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">z</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__mul__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; This function responsible for handle the 3D dot product operation&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">x</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">y</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">z</span>

	<span class="k">def</span> <span class="nf">__matmul__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">other_vector</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39; This function responsible for handle the 3D cross product operation&#39;&#39;&#39;</span>
		<span class="n">cross_x</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">z</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">y</span>
		<span class="n">cross_y</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">z</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">x</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">z</span>
		<span class="n">cross_z</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">x</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">y</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">y</span> <span class="o">*</span> <span class="n">other_vector</span><span class="o">.</span><span class="n">x</span>
		<span class="k">return</span> <span class="n">Vector3D</span><span class="p">(</span><span class="n">cross_x</span><span class="p">,</span> <span class="n">cross_y</span><span class="p">,</span> <span class="n">cross_z</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="sd">&#39;&#39;&#39;This dunder method reponsible for convert objects to string type&#39;&#39;&#39;</span>
		<span class="k">return</span> <span class="n">f</span><span class="s2">&quot;&lt;</span><span class="si">{self.x}</span><span class="s2">, </span><span class="si">{self.y}</span><span class="s2">, </span><span class="si">{self.z}</span><span class="s2">&gt;&quot;</span></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>